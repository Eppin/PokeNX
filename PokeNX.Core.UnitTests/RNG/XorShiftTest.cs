namespace PokeNX.Core.UnitTests.RNG;

using Core.RNG;
using FluentAssertions;
using Xunit;

public class XorShiftTest
{
    [Theory]
    [InlineData(0x93D1046A06496FAD, 0x79DE9ACCCB0A4A9D, 0xB4A7A65D)]
    [InlineData(0xBBB456E74AE1BB56, 0xC15DB2AD471001A5, 0x06219ADB)]
    [InlineData(0x04E64E51194870E4, 0x5C99CAACEED074EC, 0x860C5E8B)]
    [InlineData(0x56AD4A9AA1350CF9, 0xE9E58AF368608CB9, 0x60BE01F2)]
    [InlineData(0x0827C4525CE547EC, 0xD90FC485735CDCD3, 0x2FA3226F)]
    [InlineData(0x9A26BB7DA04DB367, 0x61107EECC35EF0C1, 0x2C0B2F22)]
    [InlineData(0x340A3CE46402E58E, 0xF4D03AECBDCC2DE3, 0x078D9F6D)]
    [InlineData(0x306C443D3F01867C, 0x551A636560994A21, 0xE61B3DDC)]
    [InlineData(0x2AF3AAC19EE4FACB, 0x87AC67ED50BC18A8, 0xBE27E771)]
    [InlineData(0x4924CF7D6646691F, 0x80CEA8A29942D079, 0x55952735)]
    [InlineData(0xD1323254F1F17712, 0xB8421C872596D591, 0x4271A57A)]
    [InlineData(0xFAD7B21CFB41129D, 0x00875967EF249AD6, 0x73A17610)]
    [InlineData(0xEB32B975763D3B48, 0x5DC1FD39A6D37436, 0x42B96AB2)]
    [InlineData(0x5F64D2668FFB888E, 0x386A410DB81BF69F, 0xEB860176)]
    [InlineData(0xE243CBDE4BDB954E, 0xD7C030DEA6C454DE, 0xC026BE8D)]
    [InlineData(0x7598F65DDD61C6D8, 0xF3DE789E7ED5DDD6, 0xA05A373B)]
    [InlineData(0xC27D7522A2589B0A, 0x6E7FBC0D12B01845, 0x8899FA03)]
    [InlineData(0x56D98BDF45DF4335, 0x6544C4F4017465FC, 0x5A3DE582)]
    [InlineData(0x62B41DD7429CCF75, 0x1A68864644989D48, 0x3E2B0519)]
    [InlineData(0x7D1498985B48675D, 0x7FCD7C01BCA501C1, 0xE7A78E2A)]
    public void Test_Next_Success(ulong s0, ulong s1, uint expected)
    {
        // Arrange
        var xorShift = new XorShift(s0, s1);

        // Act
        var result = xorShift.Next();

        // Assert
        result.Should().Be(expected);
    }

    [Theory]
    [InlineData(0x36B7BE5189F2376, 0x9976D429381D6D89, 79, 0x599B1824)]
    [InlineData(0xEEDD4FA23030DDB1, 0xA4B69C7BF023E1F1, 90, 0x6E0BB1EA)]
    [InlineData(0x22FC82162108485E, 0x252E676000B2216E, 18, 0xA6585A51)]
    [InlineData(0x29C1D3D356D91CE8, 0x9265CF0D114898F2, 25, 0x27EF52A3)]
    [InlineData(0xE325A9AA7912E75, 0xCAF37A91ED2A2D34, 30, 0x8B99784A)]
    [InlineData(0xF745738A90C99AB2, 0x6C4D506010B4E822, 12, 0x54EDEBF4)]
    [InlineData(0x48A7C04E869300F0, 0x46531E613A97A59F, 75, 0x82CB828A)]
    [InlineData(0xAE4BB9EAAFC7CA1D, 0x81DBDBD2FC7C7078, 44, 0xFBB400D8)]
    [InlineData(0x4822D864C536F388, 0xC861CAC0BDADCDE9, 62, 0x43377F94)]
    [InlineData(0xD64845066EA38133, 0xB8BAC9CB4A2A50D5, 93, 0x58A36EAA)]
    [InlineData(0x67A5F0B7F9105E95, 0x331BA5B6F09CEB00, 19, 0x2AA6D708)]
    [InlineData(0xEEECAD8103DC5AA7, 0x5F2031EFCF6888E, 81, 0x36526BBA)]
    [InlineData(0x7FD907BA5B80235, 0x170FAA1EE5AB5906, 59, 0x4F8B77B9)]
    [InlineData(0xB22AF13EADA6021, 0xEAA8E7E16AAE6828, 89, 0x688849B8)]
    [InlineData(0xFBDEC82C8C7A186F, 0xE4E6DD700841547B, 51, 0x1B57AD18)]
    [InlineData(0x99965122E52992E0, 0xF90270239B4F2752, 22, 0x88B9AA5F)]
    [InlineData(0xEEFB96F40C9CF53A, 0x84C68AB702DF5B96, 36, 0x1F658D00)]
    [InlineData(0xF2E2C54DFEC11607, 0xE3FE3585F8FA1D9, 21, 0xDB43ACB7)]
    [InlineData(0xF52DFAEB7848F0A2, 0x17879C9997B5F58A, 77, 0xA3BA4E51)]
    [InlineData(0x18B82FEB3938EA69, 0xF2A0763E8F6CF41B, 50, 0xF3B7AEF2)]
    public void Test_Advances_Success(ulong s0, ulong s1, uint advances, uint expected)
    {
        // Arrange
        var xorShift = new XorShift(s0, s1);

        // Act
        xorShift.Advance(advances);
        var result = xorShift.Next();

        // Assert
        result.Should().Be(expected);
    }
}
